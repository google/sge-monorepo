@rem Copyright 2021 Google LLC
@rem
@rem Licensed under the Apache License, Version 2.0 (the "License");
@rem you may not use this file except in compliance with the License.
@rem You may obtain a copy of the License at
@rem
@rem      http://www.apache.org/licenses/LICENSE-2.0
@rem
@rem Unless required by applicable law or agreed to in writing, software
@rem distributed under the License is distributed on an "AS IS" BASIS,
@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@rem See the License for the specific language governing permissions and
@rem limitations under the License.

:: This script file creates/updates an unique client for a worker.
:: This assumes the following files are already installed:
:: - C:\artifacts\p4config.txt
:: - C:\artifacts\p4tickets.txt
::
:: These files are normally provisioned via a GCS bucket or some secrets service.
::
:: Args:
::    %1 is the client name to be created for this run.
::       This should be generated by the CI system (eg. Jenkins).
::    %2 is the CL number to unshelve (optional).
if [%1]==[] goto usage
set P4_CLIENT_NAME=%1
set UNSHELVE_CL=%2

:: In general scripts should assume that p4 is in PATH.
set PATH=C:\artifacts;%PATH%

:: Download the secrets credentials that P4 needs to work from Secret manager.
call gcloud secrets versions access latest --secret=jenkins_p4config > C:\artifacts\p4config.txt
call gcloud secrets versions access latest --secret=jenkins_p4tickets > C:\artifacts\p4tickets.txt

:: This config file holds all the information to communicate successfully with the perforce server.
p4 set P4CONFIG=C:\artifacts\p4config.txt

:: We need to trust the server, as this might be the first time we are communicating with it.
p4 trust -y -f

:: Create the workspace.
mkdir C:\p4
cd C:\p4

:: This will generate a new default client with the provided name. This client will have all the
:: depots within the view, which is intended, as the runners will then scope the clients to what
:: the actually need according to the monorepos.
p4 client -o %P4_CLIENT_NAME% | p4 client -i

:: We set this new client name as the client we will use for the rest of the run.
p4 set P4CLIENT=%P4_CLIENT_NAME%

:: Sync in the cirunner which is configured to make all the CI runs work.
p4 revert -w //...
p4 sync //sge/build/cicd/cirunner/windows/...

:: If there was a CL number given, we attempt to unshelve cirunner from it.
:: This permits a run to use a shelved (modified) cirunner without the need of external resources
:: such as GCS buckets for synchronization.
if NOT [%UNSHELVE_CL%]==[] (
  p4 unshelve -s %UNSHELVE_CL% //sge/build/cicd/cirunner/windows/...
)

:: Copy the cirunner into a separate locations. If not, it can happen that the sync will get stuck
:: with cirunner trying to overwrite itself while it is being used as an executable.
mkdir c:\p4\sge\build\cicd\cirunner\windows\temp
copy C:\p4\sge\build\cicd\cirunner\windows\cirunner.exe C:\p4\sge\build\cicd\cirunner\windows\temp\cirunner.exe

@echo Perforce configuration done.
goto :eof

:usage
@echo Usage %0 "PERFORCE_CLIENT_NAME"
exit /B 1
